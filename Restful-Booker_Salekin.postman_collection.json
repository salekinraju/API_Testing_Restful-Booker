{
	"info": {
		"_postman_id": "863be977-04b8-4d10-92a3-85b96ed56b45",
		"name": "Restful-Booker_Salekin",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27175717",
		"_collection_link": "https://martian-shuttle-745068.postman.co/workspace/IT-Training-BD~ed8ab0a1-e15c-4bc9-ab7d-e0148e9e90ce/collection/27175717-863be977-04b8-4d10-92a3-85b96ed56b45?action=share&source=collection_link&creator=27175717"
	},
	"item": [
		{
			"name": "Create Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"id\", jsonData.bookingid)\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var first_name = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(\"First Name value: \" + first_name)\r",
							"pm.environment.set(\"firstName\", first_name)\r",
							"\r",
							"var last_name = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(\"Last Name value: \" + last_name)\r",
							"pm.environment.set(\"lastName\", last_name)\r",
							"\r",
							"var total_price = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(\"Total Price value: \" + total_price)\r",
							"pm.environment.set(\"totalPrice\", total_price)\r",
							"\r",
							"var deposit_paid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(\"Deposit Paid value: \" + deposit_paid)\r",
							"pm.environment.set(\"depositPaid\", deposit_paid)\r",
							"\r",
							"const today = require(\"moment\")\r",
							"const date = today()\r",
							"console.log(date.format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkin\", date.add(8, 'd').add(1, 'M').format(\"YYYY-MM-DD\"))\r",
							"\r",
							"pm.environment.set(\"checkout\", date.add(4, 'd').format(\"YYYY-MM-DD\"))\r",
							"\r",
							"var additional_needs = pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"console.log('Additional Needs value: ' + additional_needs)\r",
							"pm.environment.set(\"additionalNeeds\", additional_needs)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\": \"{{firstName}}\",\r\n\t\"lastname\": \"{{lastName}}\",\r\n\t\"totalprice\": \"{{totalPrice}}\",\r\n\t\"depositpaid\": {{depositPaid}},\r\n\t\"bookingdates\": {\r\n    \t\"checkin\": \"{{checkin}}\",\r\n    \t\"checkout\": \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\": \"{{additionalNeeds}}\"\r\n}\r\n\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code = pm.response.code\r",
							"console.log(code)\r",
							"if (code==200){\r",
							"    var jsonData = pm.response.json()\r",
							"\r",
							"    pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"\r",
							"    pm.test(\"First Name Validation.\", function(){\r",
							"        pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"Last Name Validation.\", function(){\r",
							"        pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"Total Price Validation.\", function(){\r",
							"        pm.expect(jsonData.totalprice).to.eql(Number(pm.environment.get(\"totalPrice\")))\r",
							"    })\r",
							"\r",
							"    pm.test(\"Deposit Paid Validation.\", function(){\r",
							"        pm.expect(String(jsonData.depositpaid)).to.eql(pm.environment.get(\"depositPaid\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"Check In Validation.\", function(){\r",
							"        pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"Check In Validation.\", function(){\r",
							"        pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"Additional Needs Validation.\", function(){\r",
							"        pm.expect(jsonData.additionalneeds).to.eql(pm.environment.get(\"additionalNeeds\"))\r",
							"    })\r",
							"}\r",
							"\r",
							"else if (code == 404){\r",
							"    pm.test(\"Not Found.\", function(){\r",
							"        pm.response.to.have.status(404)\r",
							"    })\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Create Token",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var tokenData = pm.response.json()\r",
							"pm.environment.set(\"token\", tokenData.token)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/auth",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update Booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var first_name = pm.variables.replaceIn(\"{{$randomFirstName}}\")\r",
							"console.log(\"First Name value: \" + first_name)\r",
							"pm.environment.set(\"firstName\", first_name)\r",
							"\r",
							"var last_name = pm.variables.replaceIn(\"{{$randomLastName}}\")\r",
							"console.log(\"Last Name value: \" + last_name)\r",
							"pm.environment.set(\"lastName\", last_name)\r",
							"\r",
							"var total_price = pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"console.log(\"Total Price value: \" + total_price)\r",
							"pm.environment.set(\"totalPrice\", total_price)\r",
							"\r",
							"var deposit_paid = pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"console.log(\"Deposit Paid value: \" + deposit_paid)\r",
							"pm.environment.set(\"depositPaid\", deposit_paid)\r",
							"\r",
							"const today = require(\"moment\")\r",
							"const date = today()\r",
							"console.log(date.format(\"YYYY-MM-DD\"))\r",
							"pm.environment.set(\"checkin\", date.add(8, 'd').add(1, 'M').format(\"YYYY-MM-DD\"))\r",
							"\r",
							"pm.environment.set(\"checkout\", date.add(4, 'd').format(\"YYYY-MM-DD\"))\r",
							"\r",
							"var additional_needs = pm.variables.replaceIn(\"{{$randomProduct}}\")\r",
							"console.log('Additional Needs value: ' + additional_needs)\r",
							"pm.environment.set(\"additionalNeeds\", additional_needs)\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalPrice}},\r\n\t\"depositpaid\" : {{depositPaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"{{additionalNeeds}}\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Get Booking Copy",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var code = pm.response.code\r",
							"console.log(code)\r",
							"if (code==200){\r",
							"    var jsonData = pm.response.json()\r",
							"\r",
							"    pm.test(\"Status code is 200\", function () {\r",
							"        pm.response.to.have.status(200);\r",
							"    });\r",
							"\r",
							"    pm.test(\"First Name Validation.\", function(){\r",
							"        pm.expect(jsonData.firstname).to.eql(pm.environment.get(\"firstName\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"Last Name Validation.\", function(){\r",
							"        pm.expect(jsonData.lastname).to.eql(pm.environment.get(\"lastName\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"Total Price Validation.\", function(){\r",
							"        pm.expect(jsonData.totalprice).to.eql(Number(pm.environment.get(\"totalPrice\")))\r",
							"    })\r",
							"\r",
							"    pm.test(\"Deposit Paid Validation.\", function(){\r",
							"        pm.expect(String(jsonData.depositpaid)).to.eql(pm.environment.get(\"depositPaid\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"Check In Validation.\", function(){\r",
							"        pm.expect(jsonData.bookingdates.checkin).to.eql(pm.environment.get(\"checkin\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"Check In Validation.\", function(){\r",
							"        pm.expect(jsonData.bookingdates.checkout).to.eql(pm.environment.get(\"checkout\"))\r",
							"    })\r",
							"\r",
							"    pm.test(\"Additional Needs Validation.\", function(){\r",
							"        pm.expect(jsonData.additionalneeds).to.eql(pm.environment.get(\"additionalNeeds\"))\r",
							"    })\r",
							"}\r",
							"\r",
							"else if (code == 404){\r",
							"    pm.test(\"Not Found.\", function(){\r",
							"        pm.response.to.have.status(404)\r",
							"    })\r",
							"}\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete Booking",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{base_url}}/booking/{{id}}",
					"host": [
						"{{base_url}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		}
	]
}